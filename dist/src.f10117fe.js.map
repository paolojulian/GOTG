{"version":3,"sources":["src/classes/Board.ts","src/classes/Pieces/Piece.ts","src/classes/Pieces/UnitPrivate.ts","src/classes/Pieces/UnitEnemy.ts","src/index.ts"],"names":[],"mappings":";;;;;;AAAA,ACAA,IDAA,ACAA,KDAA,ACAA;ADAA,ACAA;ADAA,ACAA,YDAA,ACAA;ADME,ACGA,WDHA,ACGA,KDHA,ACGA,CDFE,ACEU,GAAZ,EDHA,ACGyB,EDDvB,CCCF,EAAsC,GDHtC,EAGE,ACAF,EAAqD,MDHrD,ACGA,EDCE,ACDiE,QDHnE,EAIkB;AAPlB,ACEA,SDFA,ACEA,SDFA,ACEA,GDFoB,ACEA,CAApB,EDFA;AASE,ACNF,SDMO,ACNP,KDME,GAAa,CCNf,GAAoB,CDMlB,ACNF;ADOE,ACNF,SDMO,ACNP,GAAA,GDME,ACN6B,GDMf,CCNhB,KDME;AACA,ACJA,SDIK,ACJA,GAAL,GAAW,EDIX,CCJA,EDIgB,QAAhB;AACA,ACJA,SDIK,ACJA,GAAL,GAAW,EDIX,CCJA,EDIgB,QAAhB;AACD,ACJC,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;ADKF,ACJE,EDIF,KAAA,CAAA,CCJO,OAAL,CDIF,CAAA,IAAA,GAAA,UAAK,OAAL,EAAsC;AACpC,ACJD,IDIC,OAAO,CAAC,SAAR;ACFF;ADGE,SAAK,IAAI,IAAI,GAAG,CAAhB,EAAmB,IAAI,GAAG,KAAK,QAA/B,EAAyC,IAAI,EAA7C,EAAiD;AAC/C,WAAK,IAAI,IAAI,GAAG,CAAhB,EAAmB,IAAI,GAAG,KAAK,QAA/B,EAAyC,IAAI,EAA7C,EAAiD;AAC/C,QAAA,OAAO,CAAC,SAAR,GAAoB,CAAC,IAAI,GAAG,IAAR,IAAgB,CAAhB,KAAsB,CAAtB,GAA0B,MAA1B,GAAmC,MAAvD;AACA,QAAA,OAAO,CAAC,QAAR,CACE,IAAI,GAAG,KAAK,SADd,EAEE,IAAI,GAAG,KAAK,SAFd,EAGE,KAAK,SAHP,EAIE,KAAK,SAJP;AAMD;AACF,ACTH,EAAA,KAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;ADUC,ACTC,AGtBJ,GJkBE,CCIE,AGtBJ,OHsBW,AGtBX,CHsBY,EGtBZ,GHsBI,CAAc,WGtBlB,CAAA,OAAA,CAAA,eHsBI,EGtBJ,CAAA,CAAA;AHuBG,GAFD;ADWF,AI9BA,IAAA,KJ8BA,KAAA,GI9BA,GAAA,eAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;AJFA,ACyBE,CDzBF,CCyBE,CDzBF,ICyBE,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,GAAL,EAAkC;AAChC,AGvBJ,IAAA,IHuBQ,KAAK,EGvBb,CHuBQ,EGvBR,GHuBqB,IAAjB,EAAuB,MGvB3B,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA;AHwBM,MAAA,OAAO,CAAC,KAAR,CAAc,mCAAd;AACA,AGvBN,IAAI,MAAJ,EAA+B,GAA/B;AHwBK,AGtBL,IAAI,cAAc,GAAY,KAA9B;AACA,IAAM,SAAS,GAAG,CAAlB;AHsBI,AGrBJ,IAAM,IHqBI,KGrBK,GAAG,CAAlB,EHqBqB,GAAG;AAClB,AGrBN,IAAM,EHqBA,CAAC,EAAE,KAAK,AGrBE,GHqBP,AGrBU,GHqBC,AGrBpB,KHqByB,KAAhB,GAAwB,EADT;AAElB,AGrBN,IAAM,EHqBA,CAAC,EAAE,KAAK,GAAL,GAAW,CGrBG,GAAG,CHqBD,MAAhB,GAAyB;AAFV,AE9BxB,ADAA,AEYE,EAAA,EDZF,ADAA,CD8BI,CGlBE,EAAE,CACJ,EDbJ,ADAA,EEaQ,CDbR,ADAA,YEaQ,CAAA,EDbR,ADAA,CCAA,ADAA,IEaI,CAAgB,CAAhB,CDbJ,ADAA,CCAA,ADAA,AEauB,CAAnB,EAAsB,MDb1B,ADAA,CCAA,ADAA,CCAA,ADAA,EEaI,EAAkC,UAAlC,CADI,EAEJ,IAAI,aAAA,CAAA,OAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,UAAtB,EAAkC,UAAlC,CAFI,EAGJ,IAAI,aAAA,CAAA,OAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,UAAtB,EAAkC,UAAlC,CAHI,CADkB;AHwBtB,AGlBF,EAAA,EHkBE,GAAG,AGlBA,CHkBC,CGlBC,CACL,IAAI,GHiBJ,CACE,KAAK,EGlBH,CHiBJ,AGjBI,EHmBF,KGnBF,CAAc,CAAd,EAAiB,CAAjB,CHmBa,CAAC,AGnBM,CHiBpB,EAGE,OGpBF,EAAgC,EHoBnB,CAAC,CAHd,EAIE,IGrBF,CHqBO,AGtBF,EAEL,GHoBE,CGpBE,EHoBW,EAJf,EAKE,KAAK,AGrBH,CAAA,KHqBF,EGrBF,CHqBgB,AGrBF,CAAd,CHgBA,CGhBiB,CAAjB,EAAoB,UAApB,EAAgC,UAAhC,CAFK,EAGL,IAAI,WAAA,CAAA,OAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,UAApB,EAAgC,UAAhC,CAHK;AHyBN,AExCH,ADAA,AES0B,CAA1B,EHcE,CEvBF,ADAA,SCAA,EDAA;AD0CE,AE1CF,ADAA;ACAA,ADAA,AEsBA,IAAM,MDtBN,ADAA,MCAA,ADAA,CEsBmB,CDtBnB,ADAA,EEsByC,QAAQ,CAAC,aAAT,CACvC,aADuC,CAAzC;ADtBuC,ADAE,ECAF,ADAE,SCAF,ADAE,CCAF,ADAE,SCAF,EAAA,ADAE,EAAA,ICAF,CAAA,CDAE,CAAA;AEyBzC,IAAM,QAAQ,GAAmB,QAAQ,CAAC,aAAT,CAC/B,OAD+B,CAAjC;ADzBA,ADAA,WCAA,ADAA,SCAA,EDAA,CCAA,EDAA;AD6CE,AGhBF,EHgBE,KAAA,CAAA,KGhBW,CAAC,GHgBZ,CAAA,MAAA,GAAA,GGhBF,CAA+B,MHgBtB,CGhBT,EHgBE,AGhBsC,EHgBA,SAAtC,CGhBsC,CHgBiB;AACrD,AE1CH,ADAA,AE0BC,IHgBE,EGhBE,CAAC,IHgBI,CAAC,GAAR,CAAY,KGhBd,EAAqB,GHgBnB;AACA,AGhBA,IAAA,KHgBK,GGhBG,CAAC,SAAT,CAAmB,MAAnB,CHgBA,AGhB0B,CHgBC,GAA3B,EAAgC,EGhBhC,OHgBA;AACD,AE/CD,ADAA,ECAA,ADAA,CD4CA,QE5CA,CAAA,CDAA,CAAA,OCAA,CAAA,CDAA,CAAA,KCAA,EDAA,CCAA,EDAA,UCAA,EDAA;ADiDA,AEhDE,ADAA,AE8BA,IAAA,KD9BK,ADAA,GCAL,ADAA,GCAW,ADAA,KE8BK,GD9BG,ADAA,CCAC,ADAA,aCAT,ADAA,CCAuB,ADAA,aCAvB,CAAX,CDAW,CAAX;ACCD,ADAA,AE8BA,GDhCD,ADAA,AE6BA,MAGO;AACL,IAAA,QAAQ,CAAC,SAAT,CAAmB,GAAnB,CAAuB,QAAvB;AD9BJ,ADAA,AE+BG,SD/BH,ADAA,SCAA,EDAA;ACJA,ADAA,CCAA,ADAA,CCAuC,ADAE,OCAF,ADAE,CCAF,ADAE,OCAzC,ADAA,CCAA,ADAA;ADqDE,AGjBA,EHiBA,AGjBA,KHiBA,CAAA,QGjBc,CHiBd,CAAA,CGjBiB,CAAC,MHiBlB,GAAA,KGjBA,OHiBA,CACC,CADD;AAGA,AGnBD,CARD;;AAUA,SAAS,gBAAT,GAAyB;AACvB,EAAA,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAT;AAEA,EAAA,GAAG,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAN;AAEA,EAAA,MAAM,CAAC,MAAP,GAAgB,UAAU,GAAG,SAA7B;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,UAAU,GAAG,SAA5B,CANuB,CAOvB;;AHgBA,AGfA,EHeA,AGfA,GAAG,CAAC,CHeJ,CAAA,OGfA,CAAc,CHed,AGfA,CHeA,CGfiB,CAAjB,EAAoB,MAAM,CAAC,KAA3B,EAAkC,GHelC,GAAA,AGfwC,CAAC,KAAzC,EARuB,CAUvB,CHasB,GAAtB,EAAqD,SAArD,EAAsE;AACpE,IAAA,GAAG,CAAC,SAAJ;AACA,AGdF,IHcE,EGdI,CHcD,CAAC,GGdK,GAAU,GHcnB,CGduB,EHcP,CAAhB,IGduB,CAAA,OAAJ,CACnB,MAAM,CAAC,MADY,EAEnB,MAAM,CAAC,KAFY,EAGnB,SAHmB,EAInB,SAJmB,CAArB;AHeE,AGTF,EAAA,EHSE,GAAG,AGTA,CHSC,AGTA,IAAN,CAAW,GAAX,GHSE,GAAkB,OAAlB;AACA,AGTF,EAAA,EHSE,GAAG,CAAC,IAAJ,AGTQ,CHUN,KAAK,GAAL,GAAW,SADb,EAEE,CAAC,KAAK,GAAL,GAAW,CAAZ,IAAiB,SAFnB,EAGE,SAHF,EAIE,SAJF;AAMA,AGdF,EAAA,EHcE,CGdC,CAAC,CHcC,CAAC,EGdN,IHcE;AAEA,AGdF,IHcE,EGdI,CHcD,CAAC,EGdI,GAAG,IHcX,EGdiB,CAAC,qBAAP,EAAb;AHeE,AGdF,IHcE,EGdE,CHcC,CAAC,SAAJ,CGdF,CAtBuB,CHoCL,AGblB,CHaE;AACA,IAAA,GAAG,CAAC,WAAJ,GAAkB,OAAlB;AACA,AGdF,EAAA,EHcE,GAAG,CAAC,AGdA,CAAC,GHcL,CACE,KAAK,GAAL,GAAW,CGff,CAAwB,OHctB,AGdF,EHgBI,AGhB6B,CHgB5B,KAAK,GAAL,CGhB6B,CAAD,CHgBjB,CAAZ,AGhB2C,IHgB1B,SAFnB,EAGE,SAHF,EAIE,SAJF;AAMA,AGnBA,IHmBA,AGnBA,GHmBG,AGnBA,CHmBC,AGnBA,MHmBJ,GGnBA,CAAc,CAAd,EAAiB,CAAjB,EAAoB,MAAM,CAAC,KAA3B,EAAkC,MAAM,CAAC,MAAzC;AHqBA,AGpBA,IHoBA,AGpBA,GHoBG,CAAC,CGpBC,CAAC,IAAN,CAAW,EHoBX,CGpBA;AHqBA,AGpBA,IHoBA,AGpBA,GHoBG,CAAC,MGpBM,GHoBV,GAAgB,CAAhB;AACA,AGpBA,IHoBA,GAAG,CAAC,AGpBE,WHoBN,GAAkB,CGpBG,GAAG,GHoBxB,GGpB8B,CAAC,WAAP,GAAqB,SAA7C;AHqBA,AGpBA,IHoBA,GAAG,CAAC,AGpBE,IHoBN,CACE,CAAC,GGrBY,EHqBP,CGrBU,EHqBf,EGrBmB,CHqBR,AGrBS,CHqBrB,EGrBgB,CAAS,CHqBR,AGrBS,CAAC,OAAF,CHoB3B,EAEE,AGtBqC,IAAI,CHsBpC,AGtBqC,GHsB1C,CGtBgB,CAAlB,CHsBa,SAFb,EAGE,SAHF,EAIE,SAJF;AAMA,AGzBA,IHyBA,GAAG,CAAC,AGzBE,MHyBN,GGzBe,GAAG,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,OAAF,GAAY,IAAI,CAAC,GAA1B,CAAlB;AH2BA,AG1BA,IH0BA,GAAG,CAAC,AG1BE,IAAI,GAAG,EH0Bb,EG1BiB,CAAC,KAAL,CAAW,SAAS,GAAG,eAAvB,CAAb;AH2BA,AG1BA,IH0BA,GAAG,CAAC,AG1BE,IAAI,GAAG,EH0Bb,EG1BiB,CH0BD,AG1BE,CH0BlB,IG1Ba,CAAW,SAAS,GAAG,eAAvB,CAAb;AH2BA,AG1BA,IH0BA,GAAG,CAAC,AG1BE,KAAK,GAAG,GH0Bd,GAAkB,EG1BI,CAAC,IH0BvB,AG1BsB,EAAO,IAAP,EAAa,MAAb,CAAtB,CAT6C,CAU7C;AH0BA,IAAA,GAAG,CAAC,IAAJ,CACE,CAAC,KAAK,GAAL,GAAW,CAAZ,IAAiB,SADnB,EAEE,KAAK,GAAL,GAAW,SAFb,EAGE,SAHF,EAIE,SAJF;AAMA,AG/BA,IH+BA,GAAG,CAAC,AG/BA,MH+BJ,MG/BA,EAAkB,CACjB;AH+BF,GA5CD;AGeE,QAAI,KAAJ,EAAW;AH+Bb,AG9BI,EH8BJ,IG9BI,CH8BJ,CAAA,SAAA,CAAA,AG9BgB,GAAG,KAAf,CADS,CAET,CH6BJ,GAAA,YAAA,CAEC,CAFD;AG5BI;AH+BN,SAAA,KAAA;AAjHA,AGmFM,CHnFN,EAAA,OGmFY,YAAY,GAAG,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,KAAjB,CAA7B;;AACA,UAAI,CAAC,YAAL,EAAmB;AACjB,QAAA,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,MAAjB,CAAR;AACD,OAFD,MAEO,IAAI,YAAY,YAAY,WAAA,CAAA,OAA5B,EAAuC;AAC5C,QAAA,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,QAAjB,CAAR;AACD,OATQ,CAUT;;;AACA,UAAM,aAAa,GAAG,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,KAAjB,CAA9B;;AACA,UAAI,CAAC,aAAL,EAAoB;AAClB,QAAA,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,MAAjB,CAAR;AACD,OAFD,MAEO,IAAI,YAAY,YAAY,WAAA,CAAA,OAA5B,EAAuC;AAC5C,QAAA,QAAQ,CAAC,IAAD,EAAO,IAAI,GAAG,CAAd,EAAiB,QAAjB,CAAR;AACD,OAhBQ,CAiBT;;;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,KAAjB,CAA1B;;AACA,UAAI,CAAC,SAAL,EAAgB;AACd,QAAA,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,MAAjB,CAAR;AACD,OAFD,MAEO,IAAI,YAAY,YAAY,WAAA,CAAA,OAA5B,EAAuC;AAC5C,QAAA,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,QAAjB,CAAR;AACD,OAvBQ,CAwBT;;;AACA,UAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,KAAjB,CAA3B;;AACA,UAAI,CAAC,UAAL,EAAiB;AACf,QAAA,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,MAAjB,CAAR;AACD,OAFD,MAEO,IAAI,YAAY,YAAY,WAAA,CAAA,OAA5B,EAAuC;AAC5C,QAAA,QAAQ,CAAC,IAAI,GAAG,CAAR,EAAW,IAAX,EAAiB,QAAjB,CAAR;AACD;AACF;AACF,GA9CD;AA+CD;;AAED,SAAS,QAAT,CAAkB,CAAlB,EAA6B,CAA7B,EAAwC,IAAxC,EAAoD;AAClD,MAAI,KAAJ;;AACA,UAAQ,IAAR;AACE,SAAK,MAAL;AACE,MAAA,KAAK,GAAG,OAAR;AACA;;AACF,SAAK,QAAL;AACE,MAAA,KAAK,GAAG,KAAR;AACA;;AACF;AACE,YAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AARJ;;AAUA,EAAA,GAAG,CAAC,SAAJ;AACA,EAAA,GAAG,CAAC,SAAJ,GAAgB,CAAhB;AACA,EAAA,GAAG,CAAC,WAAJ,GAAkB,KAAlB;AACA,EAAA,GAAG,CAAC,IAAJ,CACE,CAAC,GAAG,UADN,EAEE,CAAC,GAAG,UAFN,EAGE,UAHF,EAIE,UAJF;AAMA,EAAA,GAAG,CAAC,MAAJ;AACD;;AAED,SAAS,UAAT,GAAmB;AACjB;AACA,EAAA,iBAAiB,CAAC,IAAlB,CAAuB,OAAvB,CAA+B,UAAC,KAAD,EAAa;AAC1C,IAAA,KAAK,CAAC,IAAN,CAAW,GAAX;AACD,GAFD;AAGA,EAAA,iBAAiB,CAAC,KAAlB,CAAwB,OAAxB,CAAgC,UAAC,KAAD,EAAa;AAC3C,IAAA,KAAK,CAAC,IAAN,CAAW,GAAX;AACD,GAFD,EALiB,CASjB;AACD;AAED;;;;;;;AAKA,SAAS,QAAT,CAAkB,GAAlB,EAA+B,GAA/B,EAA4C,IAA5C,EAAwD;AACtD,MAAI,MAAM,GAAe,EAAzB;;AACA,UAAQ,IAAR;AACE,SAAK,MAAL;AACE,MAAA,MAAM,GAAG,iBAAiB,CAAC,IAA3B;AACA;;AACF,SAAK,OAAL;AACE,MAAA,MAAM,GAAG,iBAAiB,CAAC,KAA3B;AACA;;AACF,SAAK,KAAL;AACE,MAAA,MAAM,GAAA,cAAA,CACD,iBAAiB,CAAC,IADjB,EAED,iBAAiB,CAAC,KAFjB,CAAN;AAIA;;AACF;AACE,YAAM,IAAI,KAAJ,CAAU,2BAAV,CAAN;AAdJ;;AAgBA,SAAO,MAAM,CAAC,IAAP,CAAY,UAAC,KAAD,EAAa;AAC9B,WAAO,KAAK,CAAC,GAAN,KAAc,GAAd,IAAqB,KAAK,CAAC,GAAN,KAAc,GAA1C;AACD,GAFM,CAAP;AAGD","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export default class Board {\r\n  width: number;\r\n  height: number;\r\n  blockSize: number = 100;\r\n  rowCount: number;\r\n  colCount: number;\r\n  constructor(\r\n    width: number,\r\n    height: number,\r\n    rowCount: number,\r\n    colCount: number\r\n  ) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.rowCount = rowCount;\r\n    this.colCount = colCount;\r\n  }\r\n\r\n  draw(context: CanvasRenderingContext2D) {\r\n    context.beginPath()\r\n    for (let iRow = 0; iRow < this.rowCount; iRow++) {\r\n      for (let iCol = 0; iCol < this.colCount; iCol++) {\r\n        context.fillStyle = (iRow + iCol) % 2 === 0 ? \"#333\" : \"#777\";\r\n        context.fillRect(\r\n          iCol * this.blockSize,\r\n          iRow * this.blockSize,\r\n          this.blockSize,\r\n          this.blockSize\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default class Piece {\r\n  width: number;\r\n  height: number;\r\n  row: number;\r\n  col: number;\r\n  positionX: number = 0;\r\n  positionY: number = 0;\r\n  img: HTMLImageElement | null = null;\r\n\r\n  constructor(row: number, col: number, width: number, height: number) {\r\n    this.row = row;\r\n    this.col = col;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.initImg();\r\n  }\r\n\r\n  /**\r\n   * Overriden method\r\n   * Initialize the image\r\n   */\r\n  initImg() {\r\n    console.error(\"Piece function initImg is not set\");\r\n  }\r\n\r\n  draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.img === null) {\r\n      console.error(\"Image of the piece was not loaded\");\r\n      return;\r\n    }\r\n    const imageCoords = {\r\n      x: this.col * this.width + 10,\r\n      y: this.row * this.height + 10\r\n    };\r\n\r\n    ctx.drawImage(\r\n      this.img,\r\n      imageCoords.x,\r\n      imageCoords.y,\r\n      this.width - 20,\r\n      this.height - 20\r\n    );\r\n  }\r\n\r\n  /**\r\n   * A method that handles the piece if it is currently selected\r\n   */\r\n  select(ctx: CanvasRenderingContext2D, blockSize: number) {\r\n    console.log('selected')\r\n    this.displayAvailableMoves(ctx, blockSize)\r\n  }\r\n\r\n  /**\r\n   * A method that handles the piece if the user selects another piece\r\n   */\r\n  deselect() {\r\n  }\r\n\r\n  /**\r\n   * Displays the available moves of the piece\r\n   * Available moves are, forward, backward and sideways only\r\n   * Rules can be seen here:\r\n   * @see https://ggsalpakan.weebly.com/rules.html\r\n   */\r\n  displayAvailableMoves(ctx: CanvasRenderingContext2D, blockSize: number) {\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"green\";\r\n    ctx.rect(\r\n      this.col * blockSize,\r\n      (this.row - 1) * blockSize,\r\n      blockSize,\r\n      blockSize\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"green\";\r\n    ctx.rect(\r\n      this.col * blockSize,\r\n      (this.row + 1) * blockSize,\r\n      blockSize,\r\n      blockSize\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"green\";\r\n    ctx.rect(\r\n      (this.col - 1) * blockSize,\r\n      this.row * blockSize,\r\n      blockSize,\r\n      blockSize\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"green\";\r\n    ctx.rect(\r\n      (this.col + 1) * blockSize,\r\n      this.row * blockSize,\r\n      blockSize,\r\n      blockSize\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  drawForward() {\r\n\r\n  }\r\n}\r\n","import Piece from \"./Piece\";\r\n\r\nexport default class UnitPrivate extends Piece {\r\n  initImg() {\r\n    this.img = document.querySelector(\"#unit_private\");\r\n  }\r\n}\r\n","import Piece from \"./Piece\";\r\n\r\nexport default class UnitEnemy extends Piece {\r\n  initImg() {\r\n    this.img = document.querySelector(\"#unit_enemy\");\r\n  }\r\n}\r\n","import Board from \"./classes/Board\";\r\nimport Piece from \"./classes/Pieces/Piece\";\r\nimport UnitPrivate from \"./classes/Pieces/UnitPrivate\";\r\nimport UnitEnemy from \"./classes/Pieces/UnitEnemy\";\r\n\r\nlet CANVAS: HTMLCanvasElement, CTX: CanvasRenderingContext2D;\r\n\r\nlet gameInProgress: boolean = false;\r\nconst ROW_COUNT = 8;\r\nconst COL_COUNT = 9;\r\nconst BLOCK_SIZE = 100;\r\nconst DEFAULT_POSITIONS = {\r\n  self: [\r\n    new UnitPrivate(5, 2, BLOCK_SIZE, BLOCK_SIZE),\r\n    new UnitPrivate(5, 4, BLOCK_SIZE, BLOCK_SIZE),\r\n    new UnitPrivate(5, 8, BLOCK_SIZE, BLOCK_SIZE)\r\n  ],\r\n  enemy: [\r\n    new UnitEnemy(4, 2, BLOCK_SIZE, BLOCK_SIZE),\r\n    new UnitEnemy(2, 4, BLOCK_SIZE, BLOCK_SIZE),\r\n    new UnitEnemy(2, 5, BLOCK_SIZE, BLOCK_SIZE)\r\n  ]\r\n};\r\n\r\nconst _startGameBtn: HTMLButtonElement = document.querySelector(\r\n  \".start-game\"\r\n) as HTMLButtonElement;\r\nconst _gameDiv: HTMLDivElement = document.querySelector(\r\n  \"#game\"\r\n) as HTMLDivElement;\r\n\r\n_startGameBtn.addEventListener(\"click\", () => {\r\n  if (!gameInProgress) {\r\n    _gameDiv.classList.remove(\"hidden\");\r\n    initializeCanvas();\r\n  } else {\r\n    _gameDiv.classList.add(\"hidden\");\r\n  }\r\n  gameInProgress = !gameInProgress;\r\n});\r\n\r\nfunction initializeCanvas() {\r\n  CANVAS = document.querySelector(\"#canvas\") as HTMLCanvasElement;\r\n\r\n  CTX = CANVAS.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n  CANVAS.height = BLOCK_SIZE * ROW_COUNT;\r\n  CANVAS.width = BLOCK_SIZE * COL_COUNT;\r\n  // Clear the canvas first\r\n  CTX.clearRect(0, 0, CANVAS.width, CANVAS.width);\r\n\r\n  // Initialize the board\r\n  const board: Board = new Board(\r\n    CANVAS.height,\r\n    CANVAS.width,\r\n    ROW_COUNT,\r\n    COL_COUNT\r\n  );\r\n  board.draw(CTX);\r\n  drawPieces();\r\n  CTX.save();\r\n\r\n  const rect = CANVAS.getBoundingClientRect();\r\n  let currentPiece: Piece;\r\n  // Add canvas click event\r\n  CANVAS.addEventListener(\"click\", (e: MouseEvent) => {\r\n    CTX.clearRect(0, 0, CANVAS.width, CANVAS.height);\r\n    board.draw(CTX);\r\n    drawPieces();\r\n    const clientBlockSize = CANVAS.clientWidth / COL_COUNT;\r\n    const boardPosX = Math.abs(e.clientX - rect.left);\r\n    const boardPosY = Math.abs(e.clientY - rect.top);\r\n    const posX = Math.floor(boardPosX / clientBlockSize);\r\n    const posY = Math.floor(boardPosY / clientBlockSize);\r\n    const piece = getPiece(posX, posY, 'self');\r\n    // Clear all rect\r\n    if (currentPiece) {\r\n    }\r\n\r\n    if (piece) {\r\n      currentPiece = piece\r\n      // Display valid Moves\r\n      // Forward\r\n      const forwardBlock = getPiece(posX, posY - 1, 'all')\r\n      if (!forwardBlock) {\r\n        drawMove(posX, posY - 1, \"move\");\r\n      } else if (forwardBlock instanceof UnitEnemy) {\r\n        drawMove(posX, posY - 1, \"attack\");\r\n      }\r\n      // Backward\r\n      const backwardBlock = getPiece(posX, posY + 1, 'all')\r\n      if (!backwardBlock) {\r\n        drawMove(posX, posY + 1, \"move\");\r\n      } else if (forwardBlock instanceof UnitEnemy) {\r\n        drawMove(posX, posY + 1, \"attack\");\r\n      }\r\n      // Left \r\n      const leftBlock = getPiece(posX - 1, posY, 'all')\r\n      if (!leftBlock) {\r\n        drawMove(posX - 1, posY, \"move\");\r\n      } else if (forwardBlock instanceof UnitEnemy) {\r\n        drawMove(posX - 1, posY, \"attack\");\r\n      }\r\n      // Right\r\n      const rightBlock = getPiece(posX + 1, posY, 'all')\r\n      if (!rightBlock) {\r\n        drawMove(posX + 1, posY, \"move\");\r\n      } else if (forwardBlock instanceof UnitEnemy) {\r\n        drawMove(posX + 1, posY, \"attack\");\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction drawMove(x: number, y: number, type: string) {\r\n  let color: string;\r\n  switch (type) {\r\n    case \"move\":\r\n      color = 'green'\r\n      break;\r\n    case \"attack\":\r\n      color = 'red'\r\n      break;\r\n    default:\r\n      throw new Error(\"Invalid type for drawMove\")\r\n  }\r\n  CTX.beginPath();\r\n  CTX.lineWidth = 4;\r\n  CTX.strokeStyle = color;\r\n  CTX.rect(\r\n    x * BLOCK_SIZE,\r\n    y * BLOCK_SIZE,\r\n    BLOCK_SIZE,\r\n    BLOCK_SIZE\r\n  );\r\n  CTX.stroke();\r\n}\r\n\r\nfunction drawPieces() {\r\n  // Load default positions of the pieces\r\n  DEFAULT_POSITIONS.self.forEach((piece: Piece) => {\r\n    piece.draw(CTX);\r\n  });\r\n  DEFAULT_POSITIONS.enemy.forEach((piece: Piece) => {\r\n    piece.draw(CTX);\r\n  });\r\n\r\n  // requestAnimationFrame(drawPieces);\r\n}\r\n\r\n/**\r\n * Gets the piece based on the given coordinates\r\n * @param col\r\n * @param row\r\n */\r\nfunction getPiece(col: number, row: number, type: string): Piece | undefined {\r\n  let pieces: Array<any> = []\r\n  switch (type) {\r\n    case \"self\":\r\n      pieces = DEFAULT_POSITIONS.self\r\n      break;\r\n    case \"enemy\":\r\n      pieces = DEFAULT_POSITIONS.enemy\r\n      break;\r\n    case \"all\":\r\n      pieces = [\r\n        ...DEFAULT_POSITIONS.self,\r\n        ...DEFAULT_POSITIONS.enemy\r\n      ]\r\n      break;\r\n    default:\r\n      throw new Error('Invalid type for getPiece')\r\n  }\r\n  return pieces.find((piece: Piece) => {\r\n    return piece.col === col && piece.row === row;\r\n  });\r\n}\r\n"]}